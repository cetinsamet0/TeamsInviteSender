<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAv2paALJiSgDAa1wFwGtcE8BrXCrAa1w9wGtcC8BrXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBZ1oAwGtcAMBq
        XAPAa1wOwGtcI8BrXEDAa1xjwGtcisBrXLDAa1zQwGtc6sBrXNnAa1wfwGtcAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAalsAwGpbAcBrXArAa1wdwGtcOMBr
        XFrAa1yAwGtcp8BrXMjAa1zjwGtc9cBrXP7Aa1z/wGtc/8BrXP/Aa1z/wGtc4MBrXB/Aa1wAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBrXADAa1w+wGtcwMBr
        XN3Aa1zxwGtc/cBrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1zgwGtcH8Br
        XAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwGtcAMBr
        XFvAa1z+wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8Br
        XODAa1wfwWtcAL1rXAG9a1wBvGlaALxpWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADAa1wAwGtcW8BrXP7Aa1z/wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8Br
        XP/Aa1z/wGtc4MBrXCDAa1xowGtcp8BrXKPAa1x5wGtcGMBrXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMBrXADAa1xbwGtc/sBrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8Br
        XP/Aa1z/wGtc/8BrXP/Aa1zgwGtcIMBrXKPAa1z/wGtc/8BrXP/Aa1yZwGtcBbxnWAC+aVoBvmpaAb9r
        WgC/a1oAAAAAAAAAAAAAAAAAwGtcAMBrXFvAa1z+wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8Br
        XP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8BrXODAa1wgwGtcosBrXP/Aa1z/wGtc/8BrXNvAa1wcwGtcacBr
        XKjAa1ykwGtcecBrXBjAa1wAwGtaAAAAAADAa1wAwGtcW8BrXP7Aa1z/wGtc/8BrXP/Aa1z/wGtc/8Br
        XP/AbF3/wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc4MBrXCDAa1yiwGtc/8BrXP/Aa1z/wGtc4MBr
        XCHAa1yjwGtc/8BrXP/Aa1z/wGtcmcBrXAXAa1wAAAAAAMBrXADAa1xbwGtc/sBrXP/Aa1z/wGtc/8Br
        XP/Aa1z/2aad/+nMxv/PjYL/v2la/8BrXP/Aa1z/wGtc/8BrXP/Aa1zgwGtcIMBrXKLAa1z/wGtc/8Br
        XP/Aa1zgwGtcIMBrXKLAa1z/wGtc/8BrXP/Aa1zbwGtcG8BrXAAAAAAAwGtcAMBrXFvAa1z+wGtc/8Br
        XP/Aa1z/wGtc/8BsXf/oysT//////9aflf+/aFn/wGtc/8BrXP/Aa1z/wGtc/8BrXODAa1wgwGtcosBr
        XP/Aa1z/wGtc/8BrXODAa1wgwGtcosBrXP/Aa1z/wGtc/8BrXODAa1wfwGtcAAAAAADAa1wAwGtcW8Br
        XP7Aa1z/wGtc/8BrXP/Aa1z/wGxd/+jKxP//////1p+V/79oWf/Aa1z/wGtc/8BrXP/Aa1z/wGtc4MBr
        XCDAa1yiwGtc/8BrXP/Aa1z/wGtc4MBrXCDAa1yiwGtc/8BrXP/Aa1z/wGtc4MBrXB/Aa1wAAAAAAMBr
        XADAa1xbwGtc/sBrXP/Aa1z/wGtc/8BrXP/AbF3/6MrE///////Wn5b/v2hZ/8BrXP/Aa1z/wGtc/8Br
        XP/Aa1zgwGtcIMBrXKLAa1z/wGtc/8BrXP/Aa1zgwGtcIMBrXKLAa1z/wGtc/8BrXP/Aa1zgwGtcH8Br
        XAAAAAAAwGtcAMBrXFvAa1z+wGtc/8BrXP/Aa1z/wGtc/8BsXf/oysT//////9aglv+/aFn/wGtc/8Br
        XP/Aa1z/wGtc/8BrXODAa1wgwGtcosBrXP/Aa1z/wGtc/8BrXODAa1wgwGtco8BrXP/Aa1z/wGtc/8Br
        XODAa1wfwGtcAAAAAADAa1wAwGtcW8BrXP7Aa1z/wGtc/8BrXP/Aa1z/wGxd/+jKxP//////1qCW/79o
        Wf/Aa1z/wGtc/8BrXP/Aa1z/wGtc4MBrXCDAa1yiwGtc/8BrXP/Aa1z/wGtc4MBrXCDAa1xowGtcqMBr
        XKXAa1ymwGtckcBrXBTAa1wAAAAAAMBrXADAa1xbwGtc/sBrXP/Aa1z/wGtc/8BqW//Aa1z/6MnE////
        ///XoJb/v2hZ/8BrXP/Aa1z/wGtc/8BrXP/Aa1zgwGtcIMBrXKPAa1z/wGtc/8BrXP/Aa1zgwGtcH8Br
        XADAa1wAwGtcAMBrXADAa1wBwGpdAMBqXQAAAAAAwGtcAMBrXFvAa1z+wGtc/8BrXP/CcGL/xXhq/8V2
        aP/qzcj//////9ijmf/Aa1z/wWxd/8BrXP/Aa1z/wGtc/8BrXODAa1wgwGtcaMBrXKbAa1yiwGtcpcBr
        XJDAa1wUwGtcAMBrXCPAa1xTwGtcOMBrXAXAa1wAAAAAAAAAAADAa1wAwGtcW8BrXP7Aa1z/v2la/9OZ
        j//26ef/9Obk//v19P//////9Obj/+3Uz//lwrz/xXdp/8BqW//Aa1z/wGtc4MBrXB/Aa1wAwGtcEMBr
        XBzAa1wIwmpeAMBrXADAa1w1wGtc1MBrXP3Aa1zuwGtcbL1kVwDAa1wAAAAAAMBrXADAa1xbwGtc/sBr
        XP+/aVr/0JCF/+7W0v/x3dr/8+Pg//Xo5f/47u3/+/X0//Xn5P/HfG//wGpb/8BrXP/Aa1zgwGtcHsBr
        XEjAa1zEwGtc3cBrXKfAa1wmwGtcAMBrXJHAa1z/wGtc/8BrXP/Aa1zRwGtcFcBrXAAAAAAAwGtcAMBr
        XFvAa1z+wGtc/8BrXP/AbF3/wW9g/8NxY//EdGb/xnhr/8h9cP/Kgnb/y4R4/8JvYP/Aa1z/wGtc/8Br
        XODAa1wgwGtcocBrXP/Aa1z/wGtc/8BrXKbAa1wFwGtckMBrXP/Aa1z/wGtc/8BrXNHAa1wVwGtcAAAA
        AADAa1wAwGtcW8BrXP7Aa1z/wGtc/8BrXP/Aa1z/wGtc/8BqW//Aalv/wGpb/79qWv+/aVr/wGtc/8Br
        XP/Aa1z/wGtc4MBrXCDAa1yiwGtc/8BrXP/Aa1z/wGtc28BrXBjAa1w0wGtc1MBrXP3Aa1zuwGtcbMBq
        WwDAa1wAAAAAAMBrXADAa1xbwGtc/sBrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8Br
        XP/Aa1z/wGtc/8BrXP/Aa1zgwGtcIMBrXKPAa1z/wGtc/8BrXP/Aa1zDwGtcD8FsXQDAa1wjwGtcU8Br
        XDjAa1wFwGtcAAAAAAAAAAAAwGtcAMBrXFvAa1z+wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8Br
        XP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8BrXODAa1wewGtcdMBrXPLAa1z9wGtc38BrXE/Aa1wAwGtcAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAa1wAwGtcW8BrXP7Aa1z/wGtc/8BrXP/Aa1z/wGtc/8Br
        XP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc4MBrXB/AalwGwGtcPMBrXFTAa1wowGpbAcBr
        XAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBrXADAa1w+wGtcwMBrXN3Aa1zxwGtc/cBr
        XP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1z/wGtc/8BrXP/Aa1zgwGtcH8BrXAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwGpbAMBqWwHAa1wKwGtcHcBr
        XDjAa1xawGtcgMBrXKfAa1zIwGtc48BrXPXAa1z+wGtc/8BrXP/Aa1z/wGtc/8BrXODAa1wfwGtcAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMFnWgDAa1wAwGpcA8BrXA7Aa1wjwGtcQMBrXGPAa1yKwGtcsMBrXNDAa1zqwGtc2cBr
        XB/Aa1wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAv2paALJiSgDAa1wFwGtcE8Br
        XCrAa1w9wGtcC8BrXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////B///wAf/8AAH//AAB//wAAT/8AAAP/AAABPwAAAA8AA
        AAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAB7wAAAQ8AAEYPAAACBwAAAAcAAAAPAAABDwAAA/8AA
        AP/AAB//wAAf//8AH////B////////////8=
</value>
  </data>
</root>